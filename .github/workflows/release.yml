name: RELEASE
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: corepack enable
      - run: yarn --version
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Build
        run: yarn build

  unit:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: corepack enable
      - run: yarn --version
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Test
        run: yarn test

  e2e:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: corepack enable
      - run: yarn --version
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Install Cypress
        run: npx cypress install
      - name: End-to-end test
        run: yarn e2e

  main:
    runs-on: ubuntu-latest
    needs:
      - build
      - unit
      - e2e
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: corepack enable
      - run: yarn --version
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Release
        run: npx semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
